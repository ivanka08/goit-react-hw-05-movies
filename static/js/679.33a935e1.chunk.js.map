{"version":3,"file":"static/js/679.33a935e1.chunk.js","mappings":"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","sources":["components/Api.js","components/App.styled.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\nconst AUTH_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiOGEzYWE4NDJlODc3MzIzMTZmNjUyMmY5NGNjYWIzYiIsInN1YiI6IjY0OTllYjZkYmJkMGIwMDEwNjZmZGNkMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.FmL6ArnlTWaeJhkdkm9WJSU56E0EQ8jMnjSepQWr4_g';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.common['accept'] = 'application/json';\n// список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport async function fetchMovieTrendToday(abortCTRL) {\n  const response = await axios.get('trending/movie/day?language=en-US', {\n    signal: abortCTRL.signal,\n  });\n\n  return response.data;\n}\n\n//  пошук фільму за ключовим словом на сторінці фільмів.\nexport async function fetchQueryMovie({ query, abortCTRL}) {\n  const response = await axios.get('search/movie', {\n    signal: abortCTRL.signal,\n    params: {\n      query: query,\n      language: 'en-US',\n      include_adult: false,\n      page: 1,\n    },\n  });\n\n  return response.data.results;\n}\n// запит повної інформації про фільм для сторінки кінофільму.\nexport async function fetchMovieInfoById({\n  id,\n   abortCTRL\n}) {\n\n  const response = await axios.get(`movie/${id}}`, {\n    signal: abortCTRL.signal,\n    params: {\n      language: 'en-US',\n      include_adult: false,\n      append_to_response: 'credits, reviews',\n    },\n  });\n\n\n  return response.data;\n}\n\n// запит інформації про акторський склад для сторінки кінофільму.\nexport async function fetchCastById({\n  id,\n  abortCTRL\n}) {\n\n  const response = await axios.get(`movie/${id}/credits?language=en-US`, {\n    signal: abortCTRL.signal,\n   \n  });\n  return response.data.cast;\n}\n\n\n// запит оглядів для сторінки кінофільму.\nexport async function fetchReviewById({ id, abortCTRL }) {\n\n  const response = await axios.get(`movie/${id}/reviews?language=en-US`, {\n    signal: abortCTRL.signal,\n  });\n  \n\n  return response.data.results;\n}","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n\n  > nav {\n    display: flex;\n  }\n`;\n\nexport const Logo = styled.p`\n  font-weight: 700;\n  margin: 0;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const LinkC = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  /* font-weight: 500; */\n\n  &.active {\n    color: red;\n    /* background-color: orangered; */\n  }\n`;\n\n","import styled from 'styled-components';\n// import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Field as FormikField } from 'formik';\nimport { Form as FormikForm } from 'formik';\n\n\nexport const Field = styled(FormikField)`\n  padding: 10px;\n  border: 2px solid orangered;\n  border-radius: 4px;\n  font-size: 16px;\n  width: 200px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\n\n \nexport const Form = styled(FormikForm)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const BTNSubmit = styled.button`\n  background-color: orangered;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  margin-left: 10px;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n\n  :hover {\n    background-color: white;\n    color: orangered;\n    border: 2px solid orangered;\n  }\n\n  // export const ButtonLabel = styled.span\n`;\n//   position: absolute;\n//   width: 1px;\n//   height: 1px;\n//   padding: 0;\n//   overflow: hidden;\n//   clip: rect(0, 0, 0, 0);\n//   white-space: nowrap;\n//   clip-path: inset(50%);\n//   border: 0;\n// `\nexport const InputSearch = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\n// export const FcSearch = styled.svg` \n//   size: 2em;\n//   vertical-align: middle;\n// `;","import { Formik,  ErrorMessage } from 'formik';\nimport { Field, Form, BTNSubmit } from './SearchBox.styled';\nconst initialValues = { query: '' };\n const SearchBox = ({ handleSubmit }) => {\n  const onSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    handleSubmit(form.elements.query.value);\n    form.reset();\n  };\n\n  return (\n    <Formik initialValues={initialValues}>\n      <Form onSubmit={onSubmit} className=\"form\">\n        <Field\n          className=\"input\"\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n         \n          \n          placeholder=\"Search movies\"\n        />\n        <BTNSubmit type=\"submit\" className=\"button\">\n          Search video\n          {/* <ButtonLabel className=\"button-label\"></ButtonLabel> */}\n        </BTNSubmit>\n\n        <ErrorMessage name=\"searchImg\" component=\"div\" />\n      </Form>\n    </Formik>\n  );\n};\nexport default SearchBox;","// import { ProductList } from '../components/ProductList';\n// import { getMovies } from '../fakeAPI';\nimport { Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { Link } from '../App.styled.js';\n// import MoviesDetails from '../MoviesDetails/MoviesDetails.jsx';\n\nimport  SearchBox  from '../SearchBox/SearchBox.jsx';\n// import { MovieList } from 'components/MovieList/MovieList.jsx';\nimport { fetchQueryMovie } from 'components/Api.js';\nimport { Suspense, useEffect, useState } from 'react';\n\n\nconst Movies = () => {\n  const [movieListQuery, setMovieListQuery] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n   useEffect(() => {\n     let abortCTRL = new AbortController();\n     const fetchData = async () => {\n       //\n       // if (searchImg === '' && page === 1) {\n       //   return;\n       // }\n       try {\n         // ініціалізація абортконтролера\n         if (abortCTRL.current) {\n           abortCTRL.current.abort();\n         }\n         abortCTRL = new AbortController();\n\n         const MovieListQuerys = await fetchQueryMovie({ query, abortCTRL });\n\n         setMovieListQuery([\n           ...MovieListQuerys,\n           // .map(({ title, id, poster_path }) => ({ title, id, poster_path }))\n         ]);\n         // const film = fetchMovieInfoById(movieInfo);\n         \n       } catch {}\n     };\n     fetchData();\n     return () => {\n       abortCTRL.abort();\n     };\n   }, [query]);\n\n   const handleSubmit = input => {\n     if (query === '') {\n       return setSearchParams({});\n     }\n     setSearchParams({ query: input });\n   };\n  \n  \n//   const movieName = searchParams.get('name') ?? '';\n    \n//   const visibleMovies = movieListQuery.filter(movie =>\n//       movie.name.toLowerCase().includes(movieName.toLowerCase())\n//     );\n    \nconst location = useLocation();\n//   const updateQueryString = (name) => {\n//     const nextParams = name !== \"\" ? { name } : {};\n//     setSearchParams(nextParams);\n//   };  movieListQuery\n  return (\n    <div>\n      Movies\n      <SearchBox handleSubmit={handleSubmit} />\n      {movieListQuery && (\n        <ul>\n          {movieListQuery.map(film => (\n            <li\n              \n              key={film.id}\n            >\n              <Link to={`${film.id}`} state={{ from: location }}>\n                {film.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n    // <main>\n\n    //   {/* <MoviesList products={products} /> */}\n    //\n    //   {/* <MoviesDetails /> */}\n\n    // </main>\n  );\n};\nexport default Movies"],"names":["fetchMovieTrendToday","_x","_fetchMovieTrendToday","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","abortCTRL","response","_context","prev","next","axios","signal","sent","abrupt","data","stop","fetchQueryMovie","_x2","_fetchQueryMovie","_callee2","_ref","query","_context2","params","language","include_adult","page","results","fetchMovieInfoById","_x3","_fetchMovieInfoById","_callee3","_ref2","id","_context3","concat","append_to_response","fetchCastById","_x4","_fetchCastById","_callee4","_ref3","_context4","cast","fetchReviewById","_x5","_fetchReviewById","_callee5","_ref4","_context5","Container","styled","_templateObject","_taggedTemplateLiteral","Header","_templateObject2","Logo","_templateObject3","Link","NavLink","_templateObject4","_templateObject5","Field","FormikField","Form","FormikForm","BTNSubmit","initialValues","handleSubmit","_jsx","Formik","children","_jsxs","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","className","name","type","autoComplete","autoFocus","placeholder","ErrorMessage","component","_useState","useState","_useState2","_slicedToArray","movieListQuery","setMovieListQuery","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","AbortController","fetchData","MovieListQuerys","current","abort","_toConsumableArray","t0","location","useLocation","SearchBox","input","map","film","to","state","from","title","Suspense","fallback","Outlet"],"sourceRoot":""}